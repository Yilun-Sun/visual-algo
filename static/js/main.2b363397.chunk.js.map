{"version":3,"sources":["Sorting/BubbleSort.js","Sorting/InsertionSort.js","Sorting/SelectionSort.js","Canvas/Canvas.js","Visualgo/Visualgo.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["BubbleSort","array","this","i","j","result","isEnd","prototype","next","len","length","temp","push","InsertionSort","preIndex","current","SelectionSort","minIndex","filledRect","props","ctx","x","y","width","height","color","fillStyle","fillRect","drawBars","drawBackground","document","getElementById","getContext","barNums","barWidth","maxInArray","Number","MIN_VALUE","forEach","element","Math","max","clearRect","nextStep","selectionSort","drawSelectionBars","clearInterval","timer","console","log","bubbleSort","Canvas","state","updateCanvas","canvasElement","offsetLeft","offsetTop","currentLeft","drawInsertionBars","refs","canvas","randomArraySize","random","newArray","index","save","setInterval","slice","clearButtonStyle","fontSize","Fragment","id","ref","onClick","startSorting","class","style","randomArray","React","Component","Header","Layout","Content","Footer","Sider","SubMenu","Menu","Visualgo","collapsed","onCollapse","setState","minHeight","collapsible","src","logo","alt","theme","defaultSelectedKeys","mode","Item","key","type","title","algoName","className","lineHeight","margin","textAlign","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.2b363397.chunk.js","sourcesContent":["function BubbleSort(array) {\r\n    // this.index = {\r\n    //     'left': left,\r\n    //     'right': right\r\n    // };\r\n    this.array = array;\r\n    this.i = 0;\r\n    this.j = 0;\r\n}\r\n\r\nlet result = [];\r\nlet isEnd = false;\r\n\r\nBubbleSort.prototype.next = function () {\r\n    var len = this.array.length;\r\n    result = [];\r\n    if (this.i < len - 1) {\r\n        if (this.j < len - 1 - this.i) {\r\n            if (this.array[this.j] > this.array[this.j + 1]) {        // 相邻元素两两对比\r\n                var temp = this.array[this.j + 1];        // 元素交换\r\n                this.array[this.j + 1] = this.array[this.j];\r\n                this.array[this.j] = temp;\r\n            }\r\n            this.j++;\r\n        }\r\n        else if (this.j === len - 1 - this.i) {\r\n            this.i++;\r\n            this.j = 0;\r\n        }\r\n    }\r\n    if (this.i === len - 1 && this.j === len - 1 - this.i)\r\n        isEnd = true;\r\n\r\n    result.push(this.array);\r\n    result.push(this.j);\r\n    result.push(isEnd);\r\n    return result;\r\n}\r\n\r\n\r\nexport default BubbleSort;","\r\n// var len = arr.length;\r\n// var preIndex, current;\r\n// for (var i = 1; i < len; i++) {\r\n//     preIndex = i - 1;\r\n//     current = arr[i];\r\n//     while(preIndex >= 0 && arr[preIndex] > current) {\r\n//         arr[preIndex+1] = arr[preIndex];\r\n//         preIndex--;\r\n//     }\r\n//     arr[preIndex+1] = current;\r\n// }\r\n// return arr;\r\n\r\n\r\nfunction InsertionSort(array) {\r\n    // this.index = {\r\n    //     'left': left,\r\n    //     'right': right\r\n    // };\r\n    this.array = array;\r\n    this.i = 1;\r\n    this.preIndex = this.i - 1;\r\n    this.current = this.array[this.i];\r\n}\r\n\r\nlet result = [];\r\nlet isEnd = false;\r\n\r\n\r\nInsertionSort.prototype.next = function () {\r\n    var len = this.array.length;\r\n    result = [];\r\n\r\n    if (this.i < len) {\r\n        \r\n        if (this.preIndex >= 0 && this.array[this.preIndex] > this.current) {\r\n            this.array[this.preIndex + 1] = this.array[this.preIndex];\r\n            this.preIndex--;\r\n        }\r\n        else {\r\n            this.array[this.preIndex + 1] = this.current;\r\n            this.i++;\r\n            this.preIndex = this.i - 1;\r\n            this.current = this.array[this.i];\r\n        }\r\n\r\n    }\r\n    if (this.i === len - 1 && this.preIndex === -1)\r\n        isEnd = true;\r\n\r\n    result.push(this.array);\r\n    result.push(this.preIndex + 1);\r\n    result.push(isEnd);\r\n    return result;\r\n}\r\n\r\n\r\nexport default InsertionSort;","function SelectionSort(array) {\r\n    // this.index = {\r\n    //     'left': left,\r\n    //     'right': right\r\n    // };\r\n    this.array = array;\r\n    this.i = 0;\r\n    this.j = 1;\r\n    this.minIndex = 0;\r\n}\r\n\r\nlet result = [];\r\nlet isEnd = false;\r\n\r\nSelectionSort.prototype.next = function () {\r\n    var len = this.array.length;\r\n    result = [];\r\n    if (this.i < len - 1) {\r\n        if (this.j < len) {\r\n            if (this.array[this.j] < this.array[this.minIndex]) {     // 寻找最小的数\r\n                this.minIndex = this.j;                 // 将最小数的索引保存\r\n            }\r\n            this.j++;\r\n        }\r\n        else {\r\n            let temp = this.array[this.i];\r\n            this.array[this.i] = this.array[this.minIndex];\r\n            this.array[this.minIndex] = temp;\r\n            this.i++;\r\n            this.minIndex = this.i;\r\n            this.j = this.i + 1;\r\n        }\r\n    }\r\n    if (this.i === len - 2 && this.j === len - 1)\r\n        isEnd = true;\r\n\r\n    result.push(this.array);\r\n    result.push(this.isEnd);\r\n    result.push(this.minIndex);\r\n    result.push(this.j);\r\n    return result;\r\n}\r\n\r\nexport default SelectionSort;","import React from 'react';\r\nimport BubbleSort from '../Sorting/BubbleSort'; //引入js文件\r\nimport InsertionSort from '../Sorting/InsertionSort'; //引入js文件\r\nimport SelectionSort from '../Sorting/SelectionSort'; //引入js文件\r\n\r\nimport styles from '../CSS/Button.module.css';\r\n\r\n// function outlinedRect(props) {\r\n//     const { ctx, x, y, width, height } = props;\r\n//     ctx.rect(x, y, width, height);\r\n//     ctx.stroke();\r\n// }\r\n\r\n\r\n\r\n// function filledCircle(props) {\r\n//     const { ctx, x, y, radius, color } = props;\r\n//     ctx.beginPath();\r\n//     ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n//     ctx.fillStyle = color;\r\n//     ctx.fill();\r\n//     ctx.stroke();\r\n//     ctx.closePath();\r\n// }\r\n\r\nfunction filledRect(props) {\r\n    const { ctx, x, y, width, height, color } = props;\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(x, y, width, height);\r\n}\r\n\r\nfunction drawBars() {\r\n    drawBackground();\r\n    const ctx = document.getElementById(\"canvas\").getContext('2d');\r\n    barNums = array.length;\r\n    barWidth = (width - 200) / (2 * array.length - 1);\r\n    // 归一化？\r\n    let maxInArray = Number.MIN_VALUE;\r\n    array.forEach(element => {\r\n        maxInArray = Math.max(element, maxInArray);\r\n    });\r\n\r\n    for (let i = 0; i < barNums; i++) {\r\n        filledRect({ ctx: ctx, x: (100 + i * barWidth * 2), y: 500, width: barWidth, height: - array[i] * (400 / maxInArray), color: \"#2B5F75\" });\r\n    }\r\n}\r\n\r\nfunction drawBubbleBars(currentLeft) {\r\n    drawBackground();\r\n    const ctx = document.getElementById(\"canvas\").getContext('2d');\r\n    barNums = array.length;\r\n    barWidth = (width - 200) / (2 * array.length - 1);\r\n    // 归一化？\r\n    let maxInArray = Number.MIN_VALUE;\r\n    array.forEach(element => {\r\n        maxInArray = Math.max(element, maxInArray);\r\n    });\r\n\r\n    for (let i = 0; i < barNums; i++) {\r\n        if (i === currentLeft) {\r\n            filledRect({ ctx: ctx, x: (100 + i * barWidth * 2), y: 500, width: barWidth, height: - array[i] * (400 / maxInArray), color: \"#FBE251\" });\r\n        }\r\n        else {\r\n            filledRect({ ctx: ctx, x: (100 + i * barWidth * 2), y: 500, width: barWidth, height: - array[i] * (400 / maxInArray), color: \"#2B5F75\" });\r\n        }\r\n    }\r\n}\r\n\r\nfunction drawInsertionBars(currentLeft) {\r\n    drawBackground();\r\n    const ctx = document.getElementById(\"canvas\").getContext('2d');\r\n    barNums = array.length;\r\n    barWidth = (width - 200) / (2 * array.length - 1);\r\n    // 归一化？\r\n    let maxInArray = Number.MIN_VALUE;\r\n    array.forEach(element => {\r\n        maxInArray = Math.max(element, maxInArray);\r\n    });\r\n\r\n    for (let i = 0; i < barNums; i++) {\r\n        if (i === currentLeft) {\r\n            filledRect({ ctx: ctx, x: (100 + i * barWidth * 2), y: 500, width: barWidth, height: - array[i] * (400 / maxInArray), color: \"#FBE251\" });\r\n        }\r\n        else {\r\n            filledRect({ ctx: ctx, x: (100 + i * barWidth * 2), y: 500, width: barWidth, height: - array[i] * (400 / maxInArray), color: \"#2B5F75\" });\r\n        }\r\n    }\r\n}\r\n\r\nfunction drawSelectionBars(current, minIndex) {\r\n    drawBackground();\r\n    const ctx = document.getElementById(\"canvas\").getContext('2d');\r\n    barNums = array.length;\r\n    barWidth = (width - 200) / (2 * array.length - 1);\r\n    // 归一化？\r\n    let maxInArray = Number.MIN_VALUE;\r\n    array.forEach(element => {\r\n        maxInArray = Math.max(element, maxInArray);\r\n    });\r\n\r\n    for (let i = 0; i < barNums; i++) {\r\n        if (i === current) {\r\n            filledRect({ ctx: ctx, x: (100 + i * barWidth * 2), y: 500, width: barWidth, height: - array[i] * (400 / maxInArray), color: \"#FBE251\" });\r\n        }\r\n        else if (i === minIndex) {\r\n            filledRect({ ctx: ctx, x: (100 + i * barWidth * 2), y: 500, width: barWidth, height: - array[i] * (400 / maxInArray), color: \"#1B813E\" });\r\n        }\r\n        else {\r\n            filledRect({ ctx: ctx, x: (100 + i * barWidth * 2), y: 500, width: barWidth, height: - array[i] * (400 / maxInArray), color: \"#2B5F75\" });\r\n        }\r\n    }\r\n}\r\n\r\nfunction drawBackground() {\r\n    const ctx = document.getElementById(\"canvas\").getContext('2d');\r\n    ctx.clearRect(0, 0, 800, 600);\r\n\r\n    filledRect({ ctx: ctx, x: 0, y: 0, width: width, height: height, color: \"#DDDDDD\" });\r\n}\r\n\r\nfunction nextStep() {\r\n    let result = selectionSort.next();\r\n    array = result[0];\r\n    // let currentLeft = result[1];\r\n    drawSelectionBars(result[2], result[3]);\r\n    if (result[1]) {\r\n        clearInterval(timer);\r\n    }\r\n    console.log('1');\r\n}\r\n\r\nfunction selectSortAlgo(algoName) {\r\n    if (algoName === 'bubble') {\r\n        bubbleSort = new BubbleSort(array);\r\n        sortAlgo = bubbleSort;\r\n    }\r\n    else if (algoName === 'insertion') {\r\n        insertionSort = new InsertionSort(array);\r\n        sortAlgo = bubbleSort;\r\n    }\r\n    else if (algoName === 'selection') {\r\n        selectionSort = new selectionSort(array);\r\n        sortAlgo = bubbleSort;\r\n    }\r\n}\r\n\r\nlet width = 800;\r\nlet height = 600;\r\nlet prevX = 0;\r\nlet prevY = 0;\r\nvar canvasElementOffsetLeft;\r\nvar canvasElementOffsetTop;\r\n\r\nvar array = [10, 15, 9, 38, 9, 16, 4, 8, 7, 23, 6, 8, 37, 16, 12, 13, 8, 27, 49, 48, 13, 42, 17];\r\n\r\nvar bubbleSort;\r\nvar quickSort;\r\nvar insertionSort;\r\nvar selectionSort;\r\n\r\nvar sortAlgo;\r\n\r\nlet barNums;\r\nlet barWidth;\r\n\r\nvar intervalId, timeoutId;\r\nvar timer;\r\n\r\nclass Canvas extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        // let isMouseDown = false;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateCanvas();\r\n\r\n        var canvasElement = document.getElementById(\"canvas\");\r\n        canvasElementOffsetLeft = canvasElement.offsetLeft;\r\n        canvasElementOffsetTop = canvasElement.offsetTop;\r\n\r\n        drawInsertionBars(0);\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        this.updateCanvas();\r\n    }\r\n    updateCanvas() {\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n        // ctx.translate(width / 2, height / 2);\r\n        ctx.clearRect(0, 0, 800, 600);\r\n\r\n        filledRect({ ctx: ctx, x: 0, y: 0, width: width, height: height, color: \"#DDDDDD\" });\r\n    }\r\n\r\n    drawBackground() {\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n        // ctx.translate(width / 2, height / 2);\r\n        ctx.clearRect(0, 0, 800, 600);\r\n\r\n        filledRect({ ctx: ctx, x: 0, y: 0, width: width, height: height, color: \"#DDDDDD\" });\r\n    }\r\n\r\n    // drawCoordinateLine() {\r\n    //     const ctx = this.refs.canvas.getContext('2d');\r\n    //     ctx.strokeStyle = \"#FFFFFB\";\r\n\r\n    //     for (let i = 0; i < 3; i++) {\r\n    //         const coorLength = height / 20;\r\n    //         for (let t = 0; t < 20; t += 2) {\r\n    //             ctx.moveTo(0, height - coorLength * (t + 11.5));\r\n    //             ctx.lineTo(0, height - coorLength * (t + 10.5));\r\n    //         }\r\n\r\n    //         ctx.stroke();\r\n    //         ctx.rotate(Math.PI * 2 / symmetry);\r\n    //     }\r\n    // }\r\n\r\n    // handleMouseDown = (event) => {\r\n    //     console.log('mouse down');\r\n\r\n    //     this.isMouseDown = true;\r\n\r\n    //     // if window is resized\r\n    //     var canvasElement = document.getElementById(\"canvas\");\r\n    //     canvasElementOffsetLeft = canvasElement.offsetLeft;\r\n    //     canvasElementOffsetTop = canvasElement.offsetTop;\r\n\r\n    //     prevX = event.pageX - canvasElementOffsetLeft - width / 2;\r\n    //     prevY = event.pageY - canvasElementOffsetTop - height / 2;\r\n    // }\r\n\r\n    // handleMouseUp = (event) => {\r\n    //     console.log('mouse up');\r\n\r\n    //     this.isMouseDown = false;\r\n    // }\r\n\r\n    // handleMouseMove = (event) => {\r\n    //     // var x = event.clientX - width / 2;\r\n    //     // var y = event.clientY - height / 2;\r\n\r\n    //     var x = event.pageX - canvasElementOffsetLeft - width / 2;\r\n    //     var y = event.pageY - canvasElementOffsetTop - height / 2;\r\n\r\n\r\n\r\n    //     if (x > width / 2 - 10 || x < - width / 2 + 10 || y > height / 2 - 10 || y < - height / 2 + 10) {\r\n    //         this.isMouseDown = false;\r\n    //     }\r\n\r\n    //     const ctx = this.refs.canvas.getContext('2d');\r\n    //     if (this.isMouseDown) {\r\n\r\n    //         for (let i = 0; i < 6; i++) {\r\n\r\n    //             ctx.beginPath();\r\n    //             ctx.moveTo(prevX, prevY);\r\n    //             ctx.lineTo(x, y);\r\n    //             ctx.stroke();\r\n    //             ctx.closePath();\r\n    //             ctx.scale(-1, 1);\r\n    //             ctx.beginPath();\r\n    //             ctx.moveTo(prevX, prevY);\r\n    //             ctx.lineTo(x, y);\r\n    //             ctx.stroke();\r\n    //             ctx.closePath();\r\n    //             ctx.scale(-1, 1);\r\n\r\n    //             ctx.rotate(angle * Math.PI / 180);\r\n    //         }\r\n\r\n    //         prevX = x;\r\n    //         prevY = y;\r\n    //     }\r\n    // }\r\n\r\n    // drawBars() {\r\n    //     // this.updateCanvas();\r\n    //     const ctx = this.refs.canvas.getContext('2d');\r\n    //     //ctx.strokeStyle = \"#333333\";\r\n\r\n    //     for (let i = 0; i < barNums; i++) {\r\n    //         filledRect({ ctx: ctx, x: (100 + i * barWidth * 2), y: 400, width: barWidth, height: - Math.random()*300 , color: \"#2B5F75\" });\r\n    //     }\r\n    // }\r\n\r\n    randomArray() {\r\n        let randomArraySize = Math.random() * 15 + 15;  // 15 - 30\r\n        let newArray = [];\r\n        for (let index = 0; index < randomArraySize; index++) {\r\n            newArray.push(Math.random() * 48 + 2);\r\n        }\r\n        array = newArray;\r\n        const ctx = document.getElementById(\"canvas\").getContext('2d');\r\n\r\n        ctx.save();\r\n\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        drawBars();\r\n        clearInterval(timer);\r\n    }\r\n\r\n    clearCanvas() {\r\n        const ctx = document.getElementById(\"canvas\").getContext('2d');\r\n\r\n        ctx.save();\r\n\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        drawBars();\r\n    }\r\n\r\n    startSorting() {\r\n        clearInterval(timer);\r\n        timer = setInterval(nextStep, 50);\r\n\r\n        selectionSort = new SelectionSort(array.slice());\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const clearButtonStyle = {\r\n            // border: 0,\r\n            // borderRadius: '5px',\r\n            // backgroundColor: '#FFFFFF',\r\n            width: '270px',\r\n            height: '60px',\r\n            fontSize: '20px'\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <canvas id='canvas' ref=\"canvas\" width={width} height={height} />\r\n                <button onClick={this.startSorting} class=\"btn btn--stripe\" style={clearButtonStyle}>Start Sorting</button>\r\n                <button onClick={this.randomArray} class=\"btn btn--stripe\" style={clearButtonStyle}>Random Array</button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Canvas;\r\nexport { selectSortAlgo };","import React from 'react';\r\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\r\nimport './Visualgo.css';\r\nimport logo from '../logo.svg';\r\nimport Canvas from '../Canvas/Canvas';\r\nimport {selectSortAlgo} from '../Canvas/Canvas';\r\n\r\nimport ButtonGroup from 'antd/lib/button/button-group';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass Visualgo extends React.Component {\r\n\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n                    <div >\r\n                        <img style={{ width: '85px' }} src={logo} alt=\"logo\" />\r\n                    </div>\r\n                    <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                        <Menu.Item key=\"1\">\r\n                            <Icon type=\"pie-chart\" />\r\n                            <span>Option 1</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\">\r\n                            <Icon type=\"desktop\" />\r\n                            <span>Option 2</span>\r\n                        </Menu.Item>\r\n                        <SubMenu\r\n                            key=\"sub1\"\r\n                            title={\r\n                                <span>\r\n                                    <Icon type=\"user\" />\r\n                                    <span>User</span>\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <Menu.Item key=\"3\">Tom</Menu.Item>\r\n                            <Menu.Item key=\"4\">Bill</Menu.Item>\r\n                            <Menu.Item key=\"5\">Alex</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu\r\n                            key=\"sub2\"\r\n                            title={\r\n                                <span>\r\n                                    <Icon type=\"team\" />\r\n                                    <span>Team</span>\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <Menu.Item key=\"6\">Team 1</Menu.Item>\r\n                            <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n                        </SubMenu>\r\n                        <Menu.Item key=\"9\">\r\n                            <Icon type=\"file\" />\r\n                            <span>File</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"10\">\r\n                            <Icon type=\"file\" />\r\n                            <button onClick={selectSortAlgo('bubble')}>Bubble</button>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header className=\"header\">\r\n                        <div className=\"logo\" />\r\n                        <Menu\r\n                            theme=\"dark\"\r\n                            mode=\"horizontal\"\r\n                            defaultSelectedKeys={['2']}\r\n                            style={{ lineHeight: '64px' }}\r\n                        >\r\n                            <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n                            <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n                            <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n                        </Menu>\r\n                    </Header>\r\n                    <Content style={{ margin: '0 16px' }}>\r\n                        <Breadcrumb style={{ margin: '16px 0' }}>\r\n                            <Breadcrumb.Item>Sorting</Breadcrumb.Item>\r\n                            {/* <Breadcrumb.Item>Bubble Sort</Breadcrumb.Item> */}\r\n                        </Breadcrumb>\r\n                        {/* <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>Bill is a cat.</div> */}\r\n                        <Canvas />\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>Elonn Software ©2020 Created by Yilun Sun</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Visualgo;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n// import { Button } from 'antd';\n// import { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport Visualgo from './Visualgo/Visualgo';\n\n// const { SubMenu } = Menu;\n// const { Header, Content, Sider } = Layout;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <Visualgo />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}